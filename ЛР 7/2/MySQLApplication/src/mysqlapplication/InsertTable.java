package mysqlapplication;

import java.awt.Dialog;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

public class InsertTable extends javax.swing.JFrame {

    private MyDBConnection mdbc;
    private java.sql.Statement stmt;
    private EditDialog dlg;

    public InsertTable() {
        try {
            mdbc = new MyDBConnection();
            mdbc.init();
            Connection conn = mdbc.getMyConnection();
            stmt = conn.createStatement();
            dlg = new EditDialog(this, true);
        } catch (Exception e) {
        }
        initComponents();
    }

    public ResultSet getResultFromCars() {
        ResultSet rs = null;
        try {
            rs = stmt.executeQuery("SELECT * FROM cars");
        } catch (SQLException e) {
        }
        return rs;
    }

    public String quotate(String content) {
        return "'" + content + "'";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CardIDLabel = new javax.swing.JLabel();
        CarNameLabel = new javax.swing.JLabel();
        CarTypeLabel = new javax.swing.JLabel();
        CarVendorLabel = new javax.swing.JLabel();
        CarIDField = new javax.swing.JTextField();
        CarNameField = new javax.swing.JTextField();
        CarTypeField = new javax.swing.JTextField();
        SendButton = new javax.swing.JButton();
        CommentLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CarTable = new javax.swing.JTable();
        CarVendorCombo = new javax.swing.JComboBox<>();
        EditButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        CardIDLabel.setText("CarID");

        CarNameLabel.setText("CarName");

        CarTypeLabel.setText("CarType");

        CarVendorLabel.setText("CarVendor");

        CarIDField.setText("jTextField1");

        CarNameField.setText("jTextField1");

        CarTypeField.setText("jTextField1");

        SendButton.setText("Send");
        SendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendButtonActionPerformed(evt);
            }
        });

        CommentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CommentLabel.setText("Click the button to send data");

        ResultSet rs = getResultFromCars();
        CarTable.setModel(new CarTableModel(rs));
        mdbc.close(rs);
        CarTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CarTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(CarTable);

        CarVendorCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nissan-LTD", "Opel-Corporation", "Citroen-Company", "Volvo-Corporation", "Mazda-Company" }));

        EditButton.setText("Edit");
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(SendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CardIDLabel)
                                    .addComponent(CarNameLabel)
                                    .addComponent(CarTypeLabel)
                                    .addComponent(CarVendorLabel))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CarTypeField, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(CarNameField)
                                    .addComponent(CarIDField)
                                    .addComponent(CarVendorCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(CommentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(EditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CardIDLabel)
                    .addComponent(CarIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CarNameLabel)
                    .addComponent(CarNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CarTypeLabel)
                    .addComponent(CarTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CarVendorLabel)
                    .addComponent(CarVendorCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(SendButton)
                .addGap(18, 18, 18)
                .addComponent(CommentLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EditButton)
                    .addComponent(DeleteButton))
                .addContainerGap(176, Short.MAX_VALUE))
        );

        setBounds(0, 0, 414, 637);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            mdbc.close(stmt.getResultSet());
            mdbc.destroy();
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_formWindowClosing

    private void SendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendButtonActionPerformed
        String CarID = CarIDField.getText();
        String CarName = CarNameField.getText();
        String CarType = CarTypeField.getText();
        String CarVendor = (String) CarVendorCombo.getSelectedItem();
        String insertStr = "";
        try {
            insertStr = "INSERT INTO cars VALUES ("
                    + quotate(CarID) + ","
                    + quotate(CarName) + ","
                    + quotate(CarType) + ","
                    + quotate(CarVendor) + ")";
            int done = stmt.executeUpdate(insertStr);
            CommentLabel.setText("1 row inserted");
            getContentPane().removeAll();
            initComponents();
        } catch (Exception e) {
            CommentLabel.setText("Error occured in inserting data");
        }
    }//GEN-LAST:event_SendButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        String CarID = (String) CarTable.getValueAt(CarTable.getSelectedRow(), 0);
        String insertStr = "";
        try {
            insertStr = "DELETE FROM cars WHERE CarID=" + CarID;
            int done = stmt.executeUpdate(insertStr);
            CommentLabel.setText("1 row deleted");
            getContentPane().removeAll();
            initComponents();
        } catch (Exception e) {
            CommentLabel.setText("Error occured in deleting data");
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        dlg.setCarID((String) CarTable.getValueAt(CarTable.getSelectedRow(), 0));
        dlg.setCarName((String) CarTable.getValueAt(CarTable.getSelectedRow(), 1));
        dlg.setCarType((String) CarTable.getValueAt(CarTable.getSelectedRow(), 2));
        dlg.setCarVendor((String) CarTable.getValueAt(CarTable.getSelectedRow(), 3));
        dlg.setVisible(true);
        try {
            String insertStr = "UPDATE cars SET CarID="
                    + quotate(dlg.getCarID()) + "WHERE CarID =" + (String) CarTable.getValueAt(CarTable.getSelectedRow(), 0);
            int done = stmt.executeUpdate(insertStr);
            insertStr = "UPDATE cars SET Name="
                    + quotate(dlg.getCarName()) + "WHERE CarID =" + (String) CarTable.getValueAt(CarTable.getSelectedRow(), 0);
            done = stmt.executeUpdate(insertStr);
            insertStr = "UPDATE cars SET Type="
                    + quotate(dlg.getCarType()) + "WHERE CarID =" + (String) CarTable.getValueAt(CarTable.getSelectedRow(), 0);
            done = stmt.executeUpdate(insertStr);
            insertStr = "UPDATE cars SET Vendor="
                    + quotate(dlg.getCarVendor()) + "WHERE CarID =" + (String) CarTable.getValueAt(CarTable.getSelectedRow(), 0);
            done = stmt.executeUpdate(insertStr);
            getContentPane().removeAll();
            initComponents();
        } catch (Exception e) {
            System.out.println("Error occured in editing data");
        }
    }//GEN-LAST:event_EditButtonActionPerformed

    private void CarTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CarTableMouseClicked
        if (CarTable.getSelectedRowCount() > 0) {
            EditButton.setEnabled(true);
            DeleteButton.setEnabled(true);
        } else {
            EditButton.setEnabled(false);
            DeleteButton.setEnabled(false);
        }
    }//GEN-LAST:event_CarTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InsertTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InsertTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InsertTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InsertTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InsertTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CarIDField;
    private javax.swing.JTextField CarNameField;
    private javax.swing.JLabel CarNameLabel;
    private javax.swing.JTable CarTable;
    private javax.swing.JTextField CarTypeField;
    private javax.swing.JLabel CarTypeLabel;
    private javax.swing.JComboBox<String> CarVendorCombo;
    private javax.swing.JLabel CarVendorLabel;
    private javax.swing.JLabel CardIDLabel;
    private javax.swing.JLabel CommentLabel;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton EditButton;
    private javax.swing.JButton SendButton;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
